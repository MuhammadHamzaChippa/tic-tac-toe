shadow$provide.module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx=function(global,require,module,exports){function objectsHaveSameKeys(...objects){const allKeys=objects.reduce((keys,object)=>keys.concat(Object.keys(object)),[]),union=new Set(allKeys);return objects.every(object=>union.size===Object.keys(object).length)}function callIfFn(maybeFn,arg){return"function"===typeof maybeFn?maybeFn(arg):maybeFn}function unstable_createStyleFunctionSx(styleFunctionMapping=_getThemeValue.styleFunctionMapping){function getThemeValue(prop,
value,theme){theme={[prop]:value,theme};const styleFunction=propToStyleFunction[prop];return styleFunction?styleFunction(theme):{[prop]:value}}function styleFunctionSx(props){function traverse(sxInput){let sxObject=sxInput;if("function"===typeof sxInput)sxObject=sxInput(theme);else if("object"!==typeof sxInput)return sxInput;if(!sxObject)return null;sxInput=(0,_breakpoints.createEmptyBreakpointObject)(theme.breakpoints);const breakpointsKeys=Object.keys(sxInput);let css=sxInput;Object.keys(sxObject).forEach(styleKey=>
{const value=callIfFn(sxObject[styleKey],theme);if(null!==value&&void 0!==value)if("object"===typeof value)if(propToStyleFunction[styleKey])css=(0,_merge.default)(css,getThemeValue(styleKey,value,theme));else{const breakpointsValues=(0,_breakpoints.handleBreakpoints)({theme},value,x=>({[styleKey]:x}));objectsHaveSameKeys(breakpointsValues,value)?css[styleKey]=styleFunctionSx({sx:value,theme}):css=(0,_merge.default)(css,breakpointsValues)}else css=(0,_merge.default)(css,getThemeValue(styleKey,value,
theme))});return(0,_breakpoints.removeUnusedBreakpoints)(breakpointsKeys,css)}const {sx,theme={}}=props||{};return sx?Array.isArray(sx)?sx.map(traverse):traverse(sx):null}const propToStyleFunction=Object.keys(styleFunctionMapping).reduce((acc,styleFnName)=>{styleFunctionMapping[styleFnName].filterProps.forEach(propName=>{acc[propName]=styleFunctionMapping[styleFnName]});return acc},{});return styleFunctionSx}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;exports.unstable_createStyleFunctionSx=unstable_createStyleFunctionSx;var _merge=global(require("module$node_modules$$mui$system$merge")),_getThemeValue=require("module$node_modules$$mui$system$getThemeValue"),_breakpoints=require("module$node_modules$$mui$system$breakpoints");require=unstable_createStyleFunctionSx();require.filterProps=["sx"];exports.default=require}
//# sourceMappingURL=module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx.js.map
